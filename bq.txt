#!/bin/bash
set -euo pipefail

# Define descriptive variable names
readonly project_id="your_project_id"
readonly view_file="view.json"
readonly schema_file="schema.txt"

# Define function to print info messages
readonly script_name="${0##*/}"
info() {
	echo "${script_name}: ${1}"
}

# Create temporary directory
readonly temp_dir=$(mktemp -d)

# Define cleanup function
cleanup() {
	rm -rf "$temp_dir"
}
trap cleanup EXIT

# define a single table you can edit this one
bigquerytable="my_dataset.my_table"

# Activate project configuration
info "Activating project configuration"
gcloud config configurations activate "$project_id" && gcloud config set project "$project_id"

# Check if required commands are available
if ! command -v bq >/dev/null 2>&1; then
	info "bq command is not found"
	info "Please install bq for your environment"
	exit 1
fi

if ! command -v jq >/dev/null 2>&1; then
	info "jq command is not found"
	exit 1
fi

# Verify $bigquerytable dataset
if ! bq ls --project_id "$project" | grep -q "$bigquerytable"; then
	echo "$bigquerytable not found"
	exit 1
fi

# List all datasets in the project
info "Listing all datasets in the project"
for dataset in $(bq ls --project_id "$project_id" --format=json | jq -r '.[].datasetReference.datasetId'); do
	info "Processing dataset $dataset"

	# List all views in the dataset
	bq ls --project_id "$project_id" --format=json "$dataset" | jq -r '.[] | select(.type == "VIEW") | .tableReference.tableId' | while read -r view; do
		info "Processing view $view"
		bq query --project_id "$project_id" --format=json "SELECT * FROM $dataset.$view LIMIT 0" | jq -r '{tableId: .configuration.view.tableId, query: .configuration.view.query}' >>"$temp_dir/$view_file"
	done
done

# Export schema for all tables in $bigquerytable dataset
info "Exporting schema for all tables in $bigquerytable dataset"
bq ls --project_id "$project" --schema $bigquerytable | grep -v "Table name" | awk ‘{print $1}’ | while read table; do
	echo "$table" >>"$schema_file"
	bq show --format=prettyjson "$project:$bigquerytable.$table" --schema | jq -r ‘.schema.fields[].name’ >>"$schema_file"
done

info "Schema exported to $schema_file"
